<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Noonker</title>
    <link>https://noonker.github.io/</link>
    <description>Recent content on Noonker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 25 Jul 2024 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://noonker.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>I Respect Our Shared Humanity</title>
      <link>https://noonker.github.io/posts/2024-07-25-i-respect-our-shared-humanity/</link>
      <pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2024-07-25-i-respect-our-shared-humanity/</guid>
      <description>Intro I used to be a person who cared greatly about ensuring that my prose were correct, and that I spelled everything correctly.
I&amp;#39;m actually going to avoid that here and I&amp;#39;m not even going to bother with a spell checker. For most casual communication I now like to focus on being fast and funny at the expense of the red squiggly lines or appeasing the specter of my english teacher.</description>
    </item>
    
    <item>
      <title>Installing Native Instruments Komplete in Wine</title>
      <link>https://noonker.github.io/posts/2023-12-05-yabridge-and-komplete/</link>
      <pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2023-12-05-yabridge-and-komplete/</guid>
      <description>Installing Komplete in Wine to use with the AWESOME tool yabridge has a big pain point
The .iso applications will not install because they do not mount correctly
https://github.com/robbert-vdh/yabridge#known-issues-and-fixes
The fix here is fine but there&amp;#39;s one gotcha:
The documentation says that you should take two steps to install the packages with wine:
udisksctl loop-setup -f ~/Downloads/&amp;lt;filename&amp;gt;.iso # load the .iso file udisksctl mount -t udf -o unhide -b /dev/loopX # where /dev/loopX corresponds to the loop device printed by the loop-setup The problem is that in Fedora 39 once you create the loop device it will automount.</description>
    </item>
    
    <item>
      <title>Pipewire and Jack on Fedora 39</title>
      <link>https://noonker.github.io/posts/2023-12-05-pipewire-and-jack-on-fedora-39/</link>
      <pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2023-12-05-pipewire-and-jack-on-fedora-39/</guid>
      <description>I recently switched from a MacBook Pro to an AMD Framework 13 Laptop. That means that I need to actually figure out how to make Linux audio work.
There were no issues using Pipewire for ALSA sound but I was unable to get Jack clients connected with errors like:
Cannot connect to server socket err = No such file or directory Cannot connect to server request channel jack server is not running or cannot be started JackShmReadWritePtr::~JackShmReadWritePtr - Init not done for -1, skipping unlock JackShmReadWritePtr::~JackShmReadWritePtr - Init not done for -1, skipping unlock</description>
    </item>
    
    <item>
      <title>Roland FR-4X USB Drives</title>
      <link>https://noonker.github.io/posts/2023-10-29-roland-fr-4x-usb-drives/</link>
      <pubDate>Mon, 23 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2023-10-29-roland-fr-4x-usb-drives/</guid>
      <description>If you&amp;#39;re a subscriber to this blog, thank you. This is almost certainly not interesting for you.
If you&amp;#39;re the owner of a Roland FR-4x digital accordion and trying to find which USB sticks can be used with your accordion I tried out every stick in my house with no luck. I learned:
They need to be FAT32 (not ExFat) They need to be USB2.0 16GB seems to be the ideal size?</description>
    </item>
    
    <item>
      <title>Soft Language</title>
      <link>https://noonker.github.io/posts/2023-10-29-soft-language/</link>
      <pubDate>Mon, 23 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2023-10-29-soft-language/</guid>
      <description>I came across this article on Hackernews by Richard Nordquist on Soft Language.
This is one of those articles I read and it wasn&amp;#39;t apparent that this would resonate with me as hard as it did. I&amp;#39;ve heard of concepts like the &amp;#34;euphemism treadmill&amp;#34; before but this is the first time I&amp;#39;m thinking of language being soft.
Is it better to use &amp;#34;hard&amp;#34; language? Is it more honest? Or do we just need to be more cognizant of not softening our language unintentionally?</description>
    </item>
    
    <item>
      <title>Car Cost Calculator</title>
      <link>https://noonker.github.io/posts/2023-10-03-car-cost-calculator/</link>
      <pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2023-10-03-car-cost-calculator/</guid>
      <description>Made a tool to calculate the cost-per-mile (cpm) for cars. Might be helpful to compare vehicles to purchase.</description>
    </item>
    
    <item>
      <title>We&#39;re In Hell</title>
      <link>https://noonker.github.io/posts/2023-08-19-were-in-hell/</link>
      <pubDate>Sat, 19 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2023-08-19-were-in-hell/</guid>
      <description>In an attempt to blog more I am sharing my good read of of the day
hahaha we live in hell</description>
    </item>
    
    <item>
      <title>Org Mode Insert Table Reference</title>
      <link>https://noonker.github.io/posts/2022-11-20-org-create-reference/</link>
      <pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2022-11-20-org-create-reference/</guid>
      <description>Emacs Org-Mode tables are very powerful. The formula editor can execute elisp commands which makes for a really powerful spreadsheet editor (especially when combined with org-sbe). One big limitation I&amp;#39;ve faced is multi-line content.
To solve this I&amp;#39;ve created a simple function to wrap around results of some elisp block to always return the most useful data.
(org-table-create-and-insert-reference &amp;#34;hello&amp;#34;) -&amp;gt; &amp;#34;hello&amp;#34;
(org-table-create-and-insert-reference &amp;#34;&amp;#34;) -&amp;gt; &amp;#34;nil&amp;#34;
(org-table-create-and-insert-reference nil) -&amp;gt; &amp;#34;nil&amp;#34;</description>
    </item>
    
    <item>
      <title>Northsec CTF</title>
      <link>https://noonker.github.io/posts/2021-05-24-northsec-ctf/</link>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2021-05-24-northsec-ctf/</guid>
      <description>I was lucky enough to get to compete in the Northsec CTF this weekend with the cold_root team. We ended up placing 4th out of 88 teams. There was a ton of awesome (and maddening) challenges and plenty of Malört consumed. The challenges showed up on a fantasy themed forum:
Scammed Again The first thing I did was go to the web page to find that it was a chat dialogue with an enchanter named….</description>
    </item>
    
    <item>
      <title>CrowdStrike Adversary Quest CTF</title>
      <link>https://noonker.github.io/posts/2021-02-01-crowdstrike-adversary-zone/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2021-02-01-crowdstrike-adversary-zone/</guid>
      <description>Overview I recently took part in the Adversary Quest CTF. I utimately got stopped at 5/12 challenges. Thanks to CrowdStrike for an awesome CTF and I look forward to completing it next year. Below are writeups for some of the challenges I was able to complete.
I&amp;#39;m excluding The Proclamation from a writeup as this was my solution- this was a very cool challenge so I&amp;#39;m going to refer you to @Vinopaljiri&amp;#39;s excellent writeup.</description>
    </item>
    
    <item>
      <title>Json To Org-Mode Table</title>
      <link>https://noonker.github.io/posts/2021-01-03-json-to-org-table/</link>
      <pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2021-01-03-json-to-org-table/</guid>
      <description>As part of the Emacs minor mode I&amp;#39;m working on I&amp;#39;ve created a useful function to turn json into Org tables while maintaining the linkage of nested structures. The is cleverly named json-to-org-table.
Why? Json is a great format for programming and parsing structures but a less good language for human consumption. I created this tool so I could interact with APIs and have a human readable format (and one that exports nicely too!</description>
    </item>
    
    <item>
      <title>Using Org-Mode to Manage Configs</title>
      <link>https://noonker.github.io/posts/2020-12-31-org-config-manager/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2020-12-31-org-config-manager/</guid>
      <description>I&amp;#39;ve just started to use Org-Mode as a way to manage my configs. Previously I&amp;#39;ve kept my configs in a git repo and just had a post-install script to put all the configs in the right place.
For now, I&amp;#39;m testing using Org-Mode for this purpose and I think I like the results.
I have a config.org file that is arranged something like this:
#+TITLE: Configs - Tangle a single block with =C-u C-c C-v t= - Tangle all blocks with =C-v C-c t= #+name: secret #+begin_src emacs-lisp :var name=&amp;#34;&amp;#34;, fld=&amp;#34;&amp;#34; (if (string-equal fld &amp;#34;password&amp;#34;) (password-store-get name) (password-store-get-field name fld)) #+end_src * tmux #+begin_src bash :noweb tangle :tangle ~/.</description>
    </item>
    
    <item>
      <title>Elfeed Rules!</title>
      <link>https://noonker.github.io/posts/2020-04-22-elfeed/</link>
      <pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2020-04-22-elfeed/</guid>
      <description>I recently got the question- &amp;#34;What is the use case for elfeed?&amp;#34;. When I get a chance to talk about my favorite software I will NEVER pass up that opportunity.
Elfeed is a RSS feed reader for Emacs that I use daily and it solves a lot of problems for me. To understand how this works let&amp;#39;s start by looking at a snippet of my feeds config. Elfeed feeds is just a list of lists where each feed is represented by (url tag1 tag2 tagN) .</description>
    </item>
    
    <item>
      <title>No More Lock-in</title>
      <link>https://noonker.github.io/posts/2019-12-28-nomorelockin/</link>
      <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2019-12-28-nomorelockin/</guid>
      <description>decoupling the address from the service I’ve been using gmail since it was an invite only beta. My email address has accumulated so much garbage over the years and finding important emails has become almost as difficult as determining important calls.
I recently switched to Protonmail due to privacy concerns with Google’s monopoly on data. I had hoped I could use this transition to slowly shift important emails to a new address.</description>
    </item>
    
    <item>
      <title>A Less Than Ideal Way To Do 2-factor</title>
      <link>https://noonker.github.io/posts/2018-10-15-duo-twofactor/</link>
      <pubDate>Mon, 15 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://noonker.github.io/posts/2018-10-15-duo-twofactor/</guid>
      <description>probably just shouldn&amp;#39;t use cell networks for 2-factor I have concerns with how Duo does phone two-factor authentication and think we can all learn from the way Google does it.
The issue:
If a user has their password compromised it’s easy to convince them to authenticate a 2-factor request without doing anything that would set off a red flag. This is due to the specific way Duo does phone call authentication.</description>
    </item>
    
  </channel>
</rss>
