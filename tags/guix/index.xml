<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guix on Noonker</title>
    <link>https://noonker.github.io/tags/guix/</link>
    <description>Recent content in Guix on Noonker</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 17 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://noonker.github.io/tags/guix/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hello Guix and Getting Thunderbolt Working</title>
      <link>https://noonker.github.io/posts/2025-01-17-hello-guix/</link>
      <pubDate>Fri, 17 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://noonker.github.io/posts/2025-01-17-hello-guix/</guid>
      <description>&lt;p&gt;&#xA;I recently made the switch to Guix on my Framework 13 laptop. Getting the install wasâ€¦. not entirely trivial but was able to get it working thanks to the post by Andy Wingo over at &lt;a href=&#34;https://wingolog.org/archives/2024/02/16/guix-on-the-framework-13-amd&#34;&gt;wingolog.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;There was one issue which brought me back to my early linux days of trying to figure out what bcm43xx was and why I had to modprobe it. That issue was that apparently thunderbolt requires a daemon to speak to external hardware. I&amp;#39;m a person who has a very cursed hardware/software combination of a Guix computer and a studio display. To make things worse all my peripherals are attached to the built in USB hub so I was essentially locked out of all of my hardware.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
